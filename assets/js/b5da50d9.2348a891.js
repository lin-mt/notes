"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[6035],{9475:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var s=a(4848),r=a(8453);const t={sidebar_position:2},i="\u90e8\u7f72 ELK",l={id:"dev-ops/docker/deploy-efk",title:"\u90e8\u7f72 ELK",description:"Spring Boot\u65e5\u5fd7\u914d\u7f6e",source:"@site/docs/dev-ops/docker/deploy-efk.md",sourceDirName:"dev-ops/docker",slug:"/dev-ops/docker/deploy-efk",permalink:"/notes/docs/dev-ops/docker/deploy-efk",draft:!1,unlisted:!1,editUrl:"https://github.com/lin-mt/notes/tree/main/docs/dev-ops/docker/deploy-efk.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"devOpsDocker",previous:{title:"\u7b80\u4ecb",permalink:"/notes/docs/dev-ops/docker/"}},o={},c=[{value:"Spring Boot\u65e5\u5fd7\u914d\u7f6e",id:"spring-boot\u65e5\u5fd7\u914d\u7f6e",level:2},{value:"\u914d\u7f6e\u6587\u4ef6",id:"\u914d\u7f6e\u6587\u4ef6",level:2},{value:"DockerCompose",id:"dockercompose",level:2},{value:"Elasticsearch",id:"elasticsearch",level:2},{value:"Filebeat",id:"filebeat",level:2},{value:"Kibana",id:"kibana",level:2},{value:"\u542f\u52a8\u90e8\u7f72",id:"\u542f\u52a8\u90e8\u7f72",level:2},{value:"\u95ee\u9898",id:"\u95ee\u9898",level:2},{value:"\u6743\u9650\u4e0d\u591f\u542f\u52a8\u5931\u8d25",id:"\u6743\u9650\u4e0d\u591f\u542f\u52a8\u5931\u8d25",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"\u90e8\u7f72-elk",children:"\u90e8\u7f72 ELK"}),"\n",(0,s.jsx)(n.h2,{id:"spring-boot\u65e5\u5fd7\u914d\u7f6e",children:"Spring Boot\u65e5\u5fd7\u914d\u7f6e"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",metastring:'title="logback-spring.xml"',children:'<?xml version="1.0" encoding="UTF-8"?>\n<configuration scan="true">\n\n    <springProperty name="activeProfile" source="spring.profiles.active" defaultValue="dev"/>\n    <springProperty name="serverId" source="server.id" defaultValue=""/>\n    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>\n    <property name="APPLICATION_NAME" value="application_name"/>\n    <property name="LOG_FILE_NAME" value="server"/>\n    <property name="LOG_FILE" value="/logs/${activeProfile}/${APPLICATION_NAME}/${serverId}/${LOG_FILE_NAME}.log"/>\n\n    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>\n    <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>\n\n    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">\n        <file>${LOG_FILE}</file>\n        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">\n            <fileNamePattern>\n                /logs/${activeProfile}/${APPLICATION_NAME}/${serverId}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}.%i.log\n            </fileNamePattern>\n            <maxFileSize>50MB</maxFileSize>\n            <maxHistory>30</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <charset>UTF-8</charset>\n            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{36} - %msg%n</pattern>\n        </encoder>\n    </appender>\n\n    <root level="INFO">\n        <appender-ref ref="CONSOLE"/>\n        <appender-ref ref="FILE"/>\n    </root>\n\n</configuration>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"\u914d\u7f6e\u6587\u4ef6",children:"\u914d\u7f6e\u6587\u4ef6"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker-compose.yml\nelasticsearch\n\u2514\u2500\u2500data\n\u2514\u2500\u2500logs\n\u2514\u2500\u2500elasticsearch.yml\nfilebeat\n\u2514\u2500\u2500filebeat.yml\nkibana\n\u2514\u2500\u2500data\n\u2514\u2500\u2500logs\n\u2514\u2500\u2500kibana.yml\n"})}),"\n",(0,s.jsx)(n.h2,{id:"dockercompose",children:"DockerCompose"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="docker-compose.yml"',children:'services:\n  elasticsearch:\n    image: elastic/elasticsearch:8.13.4\n    container_name: efk-elasticsearch\n    restart: unless-stopped\n    environment:\n    - discovery.type=single-node\n    - ES_JAVA_OPTS=-Xms1g -Xmx1g\n    - bootstrap.memory_lock=true\n    - network.publish_host=0.0.0.0\n    ports:\n    - 9200:9200\n    - 9600:9300\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    volumes:\n    - ./elasticsearch/data:/usr/share/elasticsearch/data\n    - ./elasticsearch/logs:/usr/share/elasticsearch/logs\n    - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml\n    networks:\n      - efk\n\n  kibana:\n    image: elastic/kibana:8.13.4\n    container_name: efk-kibana\n    restart: unless-stopped\n    ports:\n    - 5601:5601\n    volumes:\n    - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml\n    - ./kibana/data:/usr/share/kibana/data\n    - ./kibana/logs:/usr/share/kibana/logs\n    depends_on:\n    - elasticsearch\n    networks:\n      - efk\n\n  filebeat:\n    image: elastic/filebeat:8.13.4\n    container_name: efk-filebeat\n    restart: unless-stopped\n    user: root\n    volumes:\n    - "/logs:/logs"\n    - "./filebeat/log:/var/log/filebeat"\n    - "./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro"\n    - "/var/lib/docker/containers:/var/lib/docker/containers:ro"\n    - "/var/run/docker.sock:/var/run/docker.sock:ro"\n    depends_on:\n    - elasticsearch\n    networks:\n      - efk\n\nnetworks:\n  efk:\n    name: efk\n    driver: bridge\n'})}),"\n",(0,s.jsx)(n.h2,{id:"elasticsearch",children:"Elasticsearch"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="elasticsearch/elasticsearch.yml"',children:"network.host: 0.0.0.0\n# xpack.license.self_generated.type: trial\nxpack.security.enabled: false\n# xpack.monitoring.collection.enabled: true\n# xpack.security.transport.ssl.enabled: true\n# xpack.security.transport.ssl.keystore.type: PKCS12\n# xpack.security.transport.ssl.verification_mode: certificate\n# xpack.security.transport.ssl.keystore.path: elastic-certificates.p12\n# xpack.security.transport.ssl.truststore.path: elastic-certificates.p12\n# xpack.security.transport.ssl.truststore.type: PKCS12\n\n# xpack.security.audit.enabled: true\n"})}),"\n",(0,s.jsx)(n.h2,{id:"filebeat",children:"Filebeat"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="filebeat/filebeat.yml"',children:'filebeat.config:\n  modules:\n    path: ${path.config}/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      enable: true\n      templates:\n        - condition:\n            regexp:\n              docker.container.name: "^(dev-|test-).*"\n          config:\n            - type: container\n              containers.ids:\n                - "${data.docker.container.id}"\n              exclude_lines: ["^\\\\s+[\\\\-`(\'.|_]"]\n              multiline.pattern: "^(\\\\d{4}/\\\\d{2}/\\\\d{2}|\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+).*"\n              multiline.negate: true\n              multiline.match: after\n              paths:\n                - /var/lib/docker/containers/${data.docker.container.id}/*.log\n\nfilebeat.inputs:\n- type: log\n  enabled: true\n  paths:\n    - /logs/*/*/server.log\n  exclude_lines: ["^\\\\s+[\\\\-`(\'.|_]"]\n  multiline.pattern: "^(\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3} (ERROR|WARN|INFO|DEBUG|TRACE)\\\\s+\\\\[.*\\\\]).*"\n  multiline.negate: true\n  multiline.match: after\n\nprocessors:\n  - dissect:\n      tokenizer: "/logs/%{env}/%{name}/server.log"\n      field: "log.file.path"\n      target_prefix: "server"\n  - script:\n      when:\n        regexp:\n          message: "^(\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3}).*"\n      lang: javascript\n      source: >\n        function process(event) {\n          var log = event.Get("message");\n          var parts = log.match(/^(\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{3}) ((ERROR|WARN|INFO|DEBUG|TRACE)\\s+\\[(.*?)\\]\\s+(.*?)\\s+-\\s+(.*))$/);\n          if (parts) {\n            event.Put("timestamp", parts[1]);\n            event.Put("level", parts[3]);\n            event.Put("threadName", parts[4]);\n            event.Put("className", parts[5]);\n            event.Put("message", parts[2]);\n          }\n        }\n  - timestamp:\n      field: timestamp\n      layouts:\n        - \'2006-01-02 15:04:05\'\n        - \'2006-01-02 15:04:05.999\'\n      test:\n        - \'2019-06-22 16:33:51\'\n      timezone: "Asia/Shanghai"\n  - drop_fields:\n      fields: ["agent", "ecs", "stream", "host", "input", "log", "container.image.name", "container.id", "timestamp"]\n      ignore_missing: false\n\noutput.elasticsearch:\n  hosts: \'http://elasticsearch:9200\'\n  indices:\n    - index: "%{[server.env]}-%{[server.name]}"\n      when.has_fields: [\'server.env\', \'server.name\']\n    - index: "%{[container.name]:filebeat}"\n      when.regexp:\n        container.name: "^(dev-|test-).*"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"kibana",children:"Kibana"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="kibana/kibana.yml"',children:'server.name: kibana\nserver.host: 0.0.0.0\nelasticsearch.hosts: [ "http://elasticsearch:9200" ]\nmonitoring.ui.container.elasticsearch.enabled: true\n'})}),"\n",(0,s.jsx)(n.h2,{id:"\u542f\u52a8\u90e8\u7f72",children:"\u542f\u52a8\u90e8\u7f72"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"docker-compose up -d\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\u95ee\u9898",children:"\u95ee\u9898"}),"\n",(0,s.jsx)(n.h3,{id:"\u6743\u9650\u4e0d\u591f\u542f\u52a8\u5931\u8d25",children:"\u6743\u9650\u4e0d\u591f\u542f\u52a8\u5931\u8d25"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"chmod 777 ./elasticsearch/data\nchmod 777 ./elasticsearch/logs\nchmod 777 ./kibina/data\nchmod 777 ./kibina/logs\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);